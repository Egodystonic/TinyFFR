To install mkdocs/Material:

	The documentation is a static site generated by mkdocs and Material (an mkdocs theme).
	Need latest version of python installed (ideally installed on PATH), and then:

	pip install mkdocs
	pip install mkdocs-material

To run/build the documentation site:

	In the Documentation folder, run `mkdocs serve` to get an auto-refreshing development test version while editing
	When done, in the same folder, run `mkdocs build` to render everything 

Directory structure:

	/includes/ is some stuff that gets included in every documentation file
	/output/ is where the generated site goes, never edit this as it will just be overwritten on the next `mkdocs build`. This is also ignored in .gitignore
	/source/ is where the documentation is actually defined in markdown (edit stuff in this folder)
	/theme_overrides/ is just some custom theming stuff
	
	The .meta.yml file in each /source/ folder sets tags/metadata for every file in its directory (and subdirectories).



====================================================================================================================

The documentation source is written in markdown with some extensions. The syntax for some of the more complicated elements is documented below.
The actual markdown is between the //////// lines, and extra notes come after.

-----------------------------
Tabs
-----------------------------

////////

=== "Tab 1 Title"

	All content inside tab here

	Can be multiple lines

=== "Tab 2 Title"

	All content inside tab here

	Can be multiple lines

////////






-----------------------------
Tables
-----------------------------

////////

| Method      | Description                          |
| ----------: | :----------------------------------- |
| `GET`       | :material-check:     Fetch resource  |
| `PUT`       | :material-check-all: Update resource |
| `DELETE`    | :material-close:     Delete resource |

////////

The position of the colon the separator row (e.g. the --------:) for each column indicates the alignment.






-----------------------------
Inline Tooltips ("Annotations")
-----------------------------

////////

This is some annotated text (1) with two annotations (2) 
{ .annotate }

1.	Tooltip 1
2.	Tooltip 2

////////






-----------------------------
Code Tooltips
-----------------------------

////////

```csharp
var angle = new Angle(a); // (1)!
```

1. Test test test

////////

The comment (// ...) will be removed from the actual rendered output.






-----------------------------
Captions
-----------------------------

////////

![Image title](some_image.png)
/// caption
Caption here
///

////////

Captions can follow any element (example above uses an image but it can be anything).






-----------------------------
Callouts ("Admonitions")
-----------------------------

////////

!!! note "Callout title"
	Callout content

////////

Replace "!!!" with "???" to make the callout collapsed by default. Replace with "???+" to make it collapsible but expanded by default.
Supported callout types:

note
abstract
info
tip
success
question
warning
failure
danger
bug
example
quote






-----------------------------
Inline syntax highlighting
-----------------------------

////////

`#!csharp var angle = new Angle(a);`

////////






-----------------------------
Definition lists
-----------------------------

////////

`Definition one`

:   Text

`#!csharp DefinitionTwo()`

:   Text

    Multiple paragraphs like this

////////

Nice alternative to tables for defining multiple variants of something.






-----------------------------
Cards
-----------------------------

////////

<div class="grid cards" markdown>

-   :material-clock-fast:{ .lg .middle } __Title__

    ---

    Summary here

    [:octicons-arrow-right-24: Link](/url/)

-   :material-clock-fast:{ .lg .middle } __Title__

    ---

    Summary here

    [:octicons-arrow-right-24: Link](/url/)

</div>

////////

These can be stacked as many as desired, and make for good "start here" cards to help users navigate further on an index page.
